"For those objects that are not hashable, the method __hash__ is defined as None:Hashable objects which compare equal must have the same hash value."I guess this hash value is calculated upon the initialization of the instance, not in a dynamic way, that's why only immutable objects are hashable.An object is hashable if it has a hash value which never changes during its lifetime (it needs a __hash__() method), and can be compared to other objects (it needs an __eq__() or __cmp__() method)."In Python, any immutable object (such as an integer, boolean, string, tuple) is hashable, meaning its value does not change during its lifetime.