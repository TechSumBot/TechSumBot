
Query:  "What's the difference between commit() and apply() in SharedPreferences"


Sentences:

Answer:  #0 (https://stackoverflow.com/a/5960732)
 [ ] #0: "apply() was added in 2.3, it commits without returning a boolean indicating success or failure."
 [ ] #1: "commit() returns true if the save works, false otherwise."
 [ ] #2: "apply() was added as the Android dev team noticed that almost no one took notice of the return value, so apply is faster as it is asynchronous."

Answer:  #1 (https://stackoverflow.com/a/5960741)
 [ ] #3: "From javadoc:"
 [ ] #4: "Unlike commit(), which writes its preferences out to persistent storage synchronously, apply() commits its changes to the in-memory SharedPreferences immediately but starts an asynchronous commit to disk and you won't be notified of any failures."
 [ ] #5: "If another editor on this SharedPreferences does a regular commit() while a > apply() is still outstanding, the commit() will block until all async commits are completed as well as the commit itself"

Answer:  #2 (https://stackoverflow.com/a/5960743)
 [ ] #6: "tl;dr:"
 [ ] #7: "commit() writes the data synchronously (blocking the thread its called from)."
 [ ] #8: "It then informs you about the success of the operation."
 [ ] #9: "apply() schedules the data to be written asynchronously."
 [ ] #10: "It does not inform you about the success of the operation."
 [ ] #11: "If you save with apply() and immediately read via any getX-method, the new value will be returned!"
 [ ] #12: "If you called apply() at some point and it's still executing, any calls to commit() will block until all past apply-calls and the current commit-call are finished."
 [ ] #13: "More in-depth information from the [SharedPreferences.Editor](http://developer.android.com/reference/android/content/SharedPreferences.Editor.html#apply%28%29) Documentation:"
 [ ] #14: "Unlike commit(), which writes its preferences out to persistent storage synchronously, apply() commits its changes to the in-memory SharedPreferences immediately but starts an asynchronous commit to disk and you won't be notified of any failures."
 [ ] #15: "If another editor on this SharedPreferences does a regular commit() while a apply() is still outstanding, the commit() will block until all async commits are completed as well as the commit itself."
 [ ] #16: "As SharedPreferences instances are singletons within a process, it's safe to replace any instance of commit() with apply() if you were already ignoring the return value."
 [ ] #17: "The SharedPreferences.Editor interface isn't expected to be implemented directly."
 [ ] #18: "However, if you previously did implement it and are now getting errors about missing apply(), you can simply call commit() from apply()."

Answer:  #3 (https://stackoverflow.com/a/5960747)
 [ ] #19: "The docs give a pretty good explanation of the difference between [apply()](http://developer.android.com/reference/android/content/SharedPreferences.Editor.html#apply%28%29) and [commit()](http://developer.android.com/reference/android/content/SharedPreferences.Editor.html#commit%28%29):"
 [ ] #20: "Unlike commit(), which writes its preferences out to persistent storage synchronously, apply() commits its changes to the in-memory SharedPreferences immediately but starts an asynchronous commit to disk and you won't be notified of any failures."
 [ ] #21: "If another editor on this SharedPreferences does a regular commit() while a apply() is still outstanding, the commit() will block until all async commits are completed as well as the commit itself."
 [ ] #22: "As SharedPreferences instances are singletons within a process, it's safe to replace any instance of commit() with apply() if you were already ignoring the return value."

Answer:  #4 (https://stackoverflow.com/a/13910783)
 [ ] #23: "I'm experiencing some problems using apply() instead commit()."
 [ ] #24: "As stated before in other responses, the apply() is asynchronous."
 [ ] #25: "I'm getting the problem that the changes formed to a "string set" preference are never written to the persistent memory."
 [ ] #26: "It happens if you "force detention" of the program or, in the ROM that I have installed on my device with Android 4.1, when the process is killed by the system due to memory necessities."
 [ ] #27: "I recommend to use "commit()" instead "apply()" if you want your preferences alive."

Answer:  #5 (https://stackoverflow.com/a/15646839)
 [ ] #28: "Use apply()."
 [ ] #29: "It writes the changes to the RAM immediately and waits and writes it to the internal storage(the actual preference file) after."
 [ ] #30: "Commit writes the changes synchronously and directly to the file."

Answer:  #6 (https://stackoverflow.com/a/43564456)
 [ ] #31: "commit() is synchronously, apply() is asynchronous"
 [ ] #32: "apply() is void function."
 [ ] #33: "commit() returns true if the new values were successfully written to persistent storage."
 [ ] #34: "apply() guarantees complete before switching states , you don't need to worry about Android component lifecycles"
 [ ] #35: "If you dont use value returned from commit() and you're using commit() from main thread, use apply() instead of commit()"

Answer:  #7 (https://stackoverflow.com/a/56847549)
 [ ] #36: "The difference between commit() and apply()"
 [ ] #37: "We might be confused by those two terms, when we are using SharedPreference."
 [ ] #38: "Basically they are probably the same, so letâ€™s clarify the differences of commit() and apply()."
 [ ] #39: "1.Return value:"
 [ ] #40: "apply() commits without returning a boolean indicating success or failure."
 [ ] #41: "commit() returns true if the save works, false otherwise."
 [ ] #42: "Speed:"
 [ ] #43: "apply() is faster."
 [ ] #44: "commit() is slower."
 [ ] #45: "Asynchronous v.s."
 [ ] #46: "Synchronous:"
 [ ] #47: "apply(): Asynchronous commit(): Synchronous"
 [ ] #48: "Atomic:"
 [ ] #49: "apply(): atomic commit(): atomic"
 [ ] #50: "Error notification:"
 [ ] #51: "apply(): No commit(): Yes"

Answer:  #8 (https://stackoverflow.com/a/15335507)
 [ ] #52: "Commit() is instantaneous but performs disk writes."
 [ ] #53: "If you are on the ui thread you should call apply() which is asynchronous."

Answer:  #9 (https://stackoverflow.com/a/15335577)
 [ ] #54: "apply() - returns void"
 [ ] #55: "apply() was added in 2.3, it saves without returning a boolean indicating success or failure."
 [ ] #56: "commit() - returns boolean value."
 [ ] #57: "commit() returns true if the save works, false otherwise."
 [ ] #58: "apply() was added as the android dev team noticed that most no one took notice of the return value, so apply is faster."
 [ ] #59: "You can refer to below link"
 [ ] #60: "[What's the difference between commit() and apply() in Shared Preference](https://stackoverflow.com/questions/5960678/whats-the-difference-between-commit-and-apply)"
