An object is hashable if it has a hash value which never changes during its lifetime (it needs a __hash__() method), and can be compared to other objects (it needs an __eq__() or __cmp__() method).
Hashability makes an object usable as a dictionary key and a set member, because these data structures use the hash value internally.
Anything that is not mutable (mutable means, likely to change) can be hashed.
"A hashing function is a function which takes an object, say a string such as “Python,” and returns a fixed-size code.
"So when we say something is hashable, we mean it is immutable.
