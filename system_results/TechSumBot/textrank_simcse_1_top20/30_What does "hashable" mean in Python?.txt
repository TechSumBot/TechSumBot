"In Python, any immutable object (such as an integer, boolean, string, tuple) is hashable, meaning its value does not change during its lifetime.
Hashability makes an object usable as a dictionary key and a set member, because these data structures use the hash value internally.
Objects which are instances of user-defined classes are hashable by default; they all compare unequal, and their hash value is their id().
Hashable objects which compare equal must have the same hash value.
An object is hashable if it has a hash value which never changes during its lifetime (it needs a __hash__() method), and can be compared to other objects (it needs an __eq__() or __cmp__() method).
