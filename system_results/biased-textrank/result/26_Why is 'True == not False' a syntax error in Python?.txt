It has to do with [operator precedence in Python (hyper-link)] (the interpreter thinks you're comparing True to not, since == has a higher precedence than not).
Have a look in [this table of operator precedences (hyper-link)], you'll find that == binds tigher than not, and thus True == not False is parsed as (True == not) False which is clearly an error.
"Answers claiming that the reason for True == not False constituting a syntax error had to do with operator precedence are mistaken.
"The syntax error seems to be caused by the not keyword, not (pun intended) the equality operator:
"not has a lower priority than non-Boolean operators, so not a == b is interpreted as not (a == b), and a == not b is a syntax error.
